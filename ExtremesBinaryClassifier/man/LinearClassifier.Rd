% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{LinearClassifier}
\alias{LinearClassifier}
\title{Optimal linear classifier}
\usage{
LinearClassifier(X, thresh, H, initials, epsilon)
}
\arguments{
\item{X}{numeric matrix corresponding to the input data we want to classify}

\item{thresh}{single numeric giving the threshold over which an extreme event is defined}

\item{H}{numeric vector corresponding to the latent variable that we wish to predict}

\item{initials}{initial values for the parameters of the linear classifier to be optimized over}

\item{epsilon}{single numeric giving the amount of data to remove}
}
\value{
theta value of the linear classifier
\item{theta}{the optimal parameters for the linear classifier}
\item{Risk}{the value of the risk corresponding theta}
}
\description{
Compute the optimal linear classifier as defined in section ??? by minimizing the empirical risk (defined by emp.risk.lin).
Initial values must be provided which can be estimated by performing a classical linear regression (lm) for example.
}
\examples{
set.seed(123)
## Reproduce the simulation example from Legrand et al.
nsim <- 1e4
X1 <- 1/(runif(nsim)^(1/3))
X2 <- 1/(runif(nsim)^(1/2))
P <- 1/(runif(nsim)^(1/2))
H <- X1 + P
u <- quantile(H,probs=0.97)
init <- lm(H ~ X1 + X2, data=data.frame(H = H, X1 = X1, X2 = X2))$coefficients[2:3]
LinearClassifier(X = cbind(X1, X2), thresh = u, H = H, initials = init, epsilon = 0)
}
\references{
Legrand et al.
}
